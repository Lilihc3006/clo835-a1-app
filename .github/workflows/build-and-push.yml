name: Build and push images to ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPO_WEBAPP: webapp
  ECR_REPO_MYSQL: mysql

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push WEBAPP image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.${AWS_REGION}.amazonaws.com
          docker build -t ${ECR_REPO_WEBAPP}:latest -f Dockerfile.app .
          docker tag ${ECR_REPO_WEBAPP}:latest ${ECR_URI}/${ECR_REPO_WEBAPP}:latest
          docker push ${ECR_URI}/${ECR_REPO_WEBAPP}:latest

      - name: Build, tag and push MYSQL image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.${AWS_REGION}.amazonaws.com
          docker build -t ${ECR_REPO_MYSQL}:latest -f Dockerfile.mysql .
          docker tag ${ECR_REPO_MYSQL}:latest ${ECR_URI}/${ECR_REPO_MYSQL}:latest
          docker push ${ECR_URI}/${ECR_REPO_MYSQL}:latest

